// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/kelompok-22-capstone-project/forum-group-discussion-backend/entity"
	mock "github.com/stretchr/testify/mock"
)

// AdminRepository is an autogenerated mock type for the AdminRepository type
type AdminRepository struct {
	mock.Mock
}

// FindDashboardInfo provides a mock function with given fields: ctx
func (_m *AdminRepository) FindDashboardInfo(ctx context.Context) (entity.DashboardInfo, error) {
	ret := _m.Called(ctx)

	var r0 entity.DashboardInfo
	if rf, ok := ret.Get(0).(func(context.Context) entity.DashboardInfo); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(entity.DashboardInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAdminRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewAdminRepository creates a new instance of AdminRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAdminRepository(t mockConstructorTestingTNewAdminRepository) *AdminRepository {
	mock := &AdminRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
