// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Kelompok 22",
            "url": "http://www.swagger.io/support",
            "email": "erikriosetiawan15@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/dashboard": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get all information for admin dashboard purpose",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.infoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "This endpoint is used to get all category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.categoriesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to create a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a Category",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.CreateCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.createThreadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to update a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update a Category",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.UpdateCategory"
                        }
                    },
                    {
                        "type": "string",
                        "description": "category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to delete a category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete Category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/categories/{id}/threads": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get the threads of particular category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get Category Threads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit, default 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.threadsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "This endpoint is used for user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "user credentials",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "This endpoint is used for user register.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "register"
                ],
                "summary": "User Register",
                "parameters": [
                    {
                        "description": "register payload",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Register"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.registerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get all report",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "options: all, review, rejected, accepted, default all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit, default 20",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.reportsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to create a report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Create a Report",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.CreateReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.createThreadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/reports/{id}/status": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to update a report status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Update a Report Status",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.UpdateReportStatus"
                        }
                    },
                    {
                        "type": "string",
                        "description": "report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get all threads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Get Threads",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit, default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by keyword, default empty string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.threadsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to create a thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Create a Thread",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.CreateThread"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.createThreadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get thread by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Get Thread by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.threadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to update a thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Update a Thread",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.UpdateThread"
                        }
                    },
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to delete a thread by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Delete Thread by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads/{id}/comments": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get the thread comments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Get Thread Comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit, default 20",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.commentsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to create a comment of a thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Create a Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.CreateComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.createThreadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads/{id}/follow": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to follow/unfollow a thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Follow/Unfollow a Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads/{id}/like": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to like/unlike a thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Like/Unlike a Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads/{id}/moderators/add": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to add a moderator to thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Add a Moderator to Thread",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.AddRemoveModerator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/threads/{id}/moderators/remove": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to remove a moderator from thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Remove a Moderator from Thread",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.AddRemoveModerator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit, default 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "options: registered_date, ranking, default registered_date",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "options: active, banned, default active",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.profilesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get their own user profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Own Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.profileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get the another user by username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User by Username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.profileResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{username}/banned": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to banned/unbanned a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Banned/Unbanned a User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{username}/follow": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to follow/unfollow a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Follow/Unfollow a User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{username}/threads": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint is used to get the user threads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User Threads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page, default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit, default 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.threadsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.categoriesData": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Category"
                    },
                    "x-order": "0"
                }
            }
        },
        "controller.categoriesResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.categoriesData"
                }
            }
        },
        "controller.commentsInfoWrapper": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Comment"
                    },
                    "x-order": "0"
                },
                "pageInfo": {
                    "x-order": "1",
                    "$ref": "#/definitions/controller.pageInfoData"
                }
            }
        },
        "controller.commentsResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.commentsInfoWrapper"
                }
            }
        },
        "controller.createThreadResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.idData"
                }
            }
        },
        "controller.idData": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                }
            }
        },
        "controller.infoData": {
            "type": "object",
            "properties": {
                "totalUser": {
                    "type": "integer",
                    "x-order": "0"
                },
                "totalThread": {
                    "type": "integer",
                    "x-order": "1"
                },
                "totalModerator": {
                    "type": "integer",
                    "x-order": "2"
                },
                "totalReport": {
                    "type": "integer",
                    "x-order": "3"
                }
            }
        },
        "controller.infoResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.infoData"
                }
            }
        },
        "controller.loginResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/response.Login"
                }
            }
        },
        "controller.pageInfoData": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "x-order": "0"
                },
                "page": {
                    "type": "integer",
                    "x-order": "1"
                },
                "pageTotal": {
                    "type": "integer",
                    "x-order": "2"
                },
                "total": {
                    "type": "integer",
                    "x-order": "3"
                }
            }
        },
        "controller.profileResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "controller.profilesInfoWrapper": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.User"
                    },
                    "x-order": "0"
                },
                "pageInfo": {
                    "x-order": "1",
                    "$ref": "#/definitions/controller.pageInfoData"
                }
            }
        },
        "controller.profilesResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.profilesInfoWrapper"
                }
            }
        },
        "controller.registerResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.userIDData"
                }
            }
        },
        "controller.reportData": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string",
                    "x-order": "0"
                },
                "moderatorID": {
                    "type": "string",
                    "x-order": "1"
                },
                "moderatorUsername": {
                    "type": "string",
                    "x-order": "2"
                },
                "moderatorName": {
                    "type": "string",
                    "x-order": "3"
                },
                "userID": {
                    "type": "string",
                    "x-order": "4"
                },
                "username": {
                    "type": "string",
                    "x-order": "5"
                },
                "name": {
                    "type": "string",
                    "x-order": "6"
                },
                "reason": {
                    "type": "string",
                    "x-order": "7"
                },
                "status": {
                    "type": "string",
                    "x-order": "8"
                },
                "reportedOn": {
                    "description": "ReportedOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "9"
                }
            }
        },
        "controller.reportsData": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.reportData"
                    },
                    "x-order": "0"
                },
                "pageInfo": {
                    "x-order": "1",
                    "$ref": "#/definitions/controller.pageInfoData"
                }
            }
        },
        "controller.reportsResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.reportsData"
                }
            }
        },
        "controller.threadResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/response.Thread"
                }
            }
        },
        "controller.threadsInfoWrapper": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ManyThread"
                    },
                    "x-order": "0"
                },
                "pageInfo": {
                    "x-order": "1",
                    "$ref": "#/definitions/controller.pageInfoData"
                }
            }
        },
        "controller.threadsResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "x-order": "0"
                },
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "x-order": "2",
                    "$ref": "#/definitions/controller.threadsInfoWrapper"
                }
            }
        },
        "controller.userIDData": {
            "type": "object",
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "payload.AddRemoveModerator": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "x-order": "0"
                }
            }
        },
        "payload.CreateCategory": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "x-order": "0"
                },
                "description": {
                    "type": "string",
                    "minLength": 2,
                    "x-order": "1"
                }
            }
        },
        "payload.CreateComment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "minLength": 1,
                    "x-order": "0"
                }
            }
        },
        "payload.CreateReport": {
            "type": "object",
            "properties": {
                "userID": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "x-order": "0"
                },
                "reason": {
                    "type": "string",
                    "minLength": 2,
                    "x-order": "1"
                }
            }
        },
        "payload.CreateThread": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "x-order": "0"
                },
                "description": {
                    "type": "string",
                    "minLength": 2,
                    "x-order": "1"
                },
                "categoryID": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 4,
                    "x-order": "2"
                }
            }
        },
        "payload.Login": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "x-order": "1"
                }
            }
        },
        "payload.Register": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "x-order": "0"
                },
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5,
                    "x-order": "1"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "x-order": "2"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "x-order": "3"
                }
            }
        },
        "payload.UpdateCategory": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "x-order": "0"
                },
                "description": {
                    "type": "string",
                    "minLength": 2,
                    "x-order": "1"
                }
            }
        },
        "payload.UpdateReportStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status, available options: rejected, accepted",
                    "type": "string",
                    "maxLength": 9,
                    "minLength": 5,
                    "x-order": "0"
                }
            }
        },
        "payload.UpdateThread": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "x-order": "0"
                },
                "description": {
                    "type": "string",
                    "minLength": 2,
                    "x-order": "1"
                },
                "categoryID": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 4,
                    "x-order": "2"
                }
            }
        },
        "response.Category": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string",
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1"
                },
                "description": {
                    "type": "string",
                    "x-order": "2"
                },
                "createdOn": {
                    "description": "CreatedOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "3"
                }
            }
        },
        "response.Comment": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string",
                    "x-order": "0"
                },
                "userID": {
                    "type": "string",
                    "x-order": "1"
                },
                "username": {
                    "type": "string",
                    "x-order": "2"
                },
                "name": {
                    "type": "string",
                    "x-order": "3"
                },
                "comment": {
                    "type": "string",
                    "x-order": "4"
                },
                "publishedOn": {
                    "description": "PublishedOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "5"
                }
            }
        },
        "response.Login": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "x-order": "0"
                },
                "role": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "response.ManyThread": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string",
                    "x-order": "0"
                },
                "title": {
                    "type": "string",
                    "x-order": "1"
                },
                "totalFollower": {
                    "type": "integer",
                    "x-order": "10"
                },
                "totalComment": {
                    "type": "integer",
                    "x-order": "11"
                },
                "creatorID": {
                    "type": "string",
                    "x-order": "12"
                },
                "creatorUsername": {
                    "type": "string",
                    "x-order": "13"
                },
                "creatorName": {
                    "type": "string",
                    "x-order": "14"
                },
                "categoryID": {
                    "type": "string",
                    "x-order": "2"
                },
                "categoryName": {
                    "type": "string",
                    "x-order": "3"
                },
                "publishedOn": {
                    "description": "PublishedOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "4"
                },
                "isLiked": {
                    "type": "boolean",
                    "x-order": "5"
                },
                "isFollowed": {
                    "type": "boolean",
                    "x-order": "6"
                },
                "description": {
                    "type": "string",
                    "x-order": "7"
                },
                "totalViewer": {
                    "type": "integer",
                    "x-order": "8"
                },
                "totalLike": {
                    "type": "integer",
                    "x-order": "9"
                }
            }
        },
        "response.Moderator": {
            "type": "object",
            "properties": {
                "moderatorID": {
                    "type": "string",
                    "x-order": "0"
                },
                "userId": {
                    "type": "string",
                    "x-order": "1"
                },
                "username": {
                    "type": "string",
                    "x-order": "2"
                },
                "email": {
                    "type": "string",
                    "x-order": "3"
                },
                "name": {
                    "type": "string",
                    "x-order": "4"
                },
                "role": {
                    "type": "string",
                    "x-order": "5"
                },
                "isActive": {
                    "type": "boolean",
                    "x-order": "6"
                },
                "registeredOn": {
                    "description": "RegisteredOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "7"
                }
            }
        },
        "response.Thread": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string",
                    "x-order": "0"
                },
                "title": {
                    "type": "string",
                    "x-order": "1"
                },
                "totalLike": {
                    "type": "integer",
                    "x-order": "10"
                },
                "totalFollower": {
                    "type": "integer",
                    "x-order": "11"
                },
                "totalComment": {
                    "type": "integer",
                    "x-order": "12"
                },
                "creatorID": {
                    "type": "string",
                    "x-order": "13"
                },
                "creatorUsername": {
                    "type": "string",
                    "x-order": "14"
                },
                "creatorName": {
                    "type": "string",
                    "x-order": "15"
                },
                "categoryID": {
                    "type": "string",
                    "x-order": "2"
                },
                "categoryName": {
                    "type": "string",
                    "x-order": "3"
                },
                "publishedOn": {
                    "description": "PublishedOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "4"
                },
                "isLiked": {
                    "type": "boolean",
                    "x-order": "5"
                },
                "isFollowed": {
                    "type": "boolean",
                    "x-order": "6"
                },
                "moderators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Moderator"
                    },
                    "x-order": "7"
                },
                "description": {
                    "type": "string",
                    "x-order": "8"
                },
                "totalViewer": {
                    "type": "integer",
                    "x-order": "9"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "userID": {
                    "type": "string",
                    "x-order": "0"
                },
                "username": {
                    "type": "string",
                    "x-order": "1"
                },
                "email": {
                    "type": "string",
                    "x-order": "2"
                },
                "name": {
                    "type": "string",
                    "x-order": "3"
                },
                "role": {
                    "type": "string",
                    "x-order": "4"
                },
                "isActive": {
                    "type": "boolean",
                    "x-order": "5"
                },
                "registeredOn": {
                    "description": "RegisteredOn layout format: time.RFC822 (02 Jan 06 15:04 MST)",
                    "type": "string",
                    "x-order": "6"
                },
                "totalThread": {
                    "type": "integer",
                    "x-order": "7"
                },
                "totalFollower": {
                    "type": "integer",
                    "x-order": "8"
                },
                "isFollowed": {
                    "type": "boolean",
                    "x-order": "9"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKey": {
            "type": "apiKey",
            "name": "API-Key",
            "in": "header"
        },
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "moot-rest-api.herokuapp.com",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Forum Group Discussion API",
	Description:      "API for Forum Group Discussion",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
